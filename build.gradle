plugins {
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

group = 'com.qualityplus.core'
version = '3.76.0'

subprojects {
    version = rootProject.version

    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'com.github.johnrengelman.shadow'

    java {
        toolchain.languageVersion.set(JavaLanguageVersion.of(21))
    }
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    jar {
        from '../LICENSE.txt'
    }

    repositories {
        mavenCentral()

        maven { url 'https://jitpack.io' }

        maven {
            url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
        }

        maven {
            url 'https://repo.papermc.io/repo/repository/maven-public/'
        }
    }

    dependencies {
        implementation("org.jetbrains:annotations:22.0.0")

        compileOnly("org.projectlombok:lombok:1.18.30")
        compileOnly 'com.github.r3back:the-assistant:3.20.0'
        //These both are temporal until jar class loader be added
        compileOnly 'io.lettuce:lettuce-core:6.1.1.RELEASE'
        compileOnly 'org.mongodb:mongo-java-driver:3.12.10'

        // Enable lombok annotation processing
        annotationProcessor("org.projectlombok:lombok:1.18.30")
    }

    processResources{
        filesMatching('plugin.yml') {
            expand 'version': version
        }
    }

    shadowJar {
        def name = project.name

        archiveFileName = name + '.jar'

        dependencies {
            exclude(dependency('org.jetbrains:.*'))
        }

        doLast {
            if (!name.contains('NMS') && !name.contains('Legacy') && !name.contains("Newest")) {
                def saveFilesPath =  rootProject.projectDir.getAbsolutePath() + '/all-generated'
                def testSuitePath =  rootProject.projectDir.getAbsolutePath() + '/test-suite/mc-config/plugins'
                mkdir saveFilesPath
                [saveFilesPath, testSuitePath].forEach(folder -> copy { into folder from archiveFile.get().getAsFile() })
            }
        }
    }

    artifacts {
        archives shadowJar
    }
}



